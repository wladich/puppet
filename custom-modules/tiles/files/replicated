#!/bin/bash
set -e

LOG_FILE=/var/log/replicated/replicated.log
WORK_DIR=/var/lib/osm_replicate
CHANGES_FILE=$WORK_DIR/changes.xml
TEMP_FILE=$WORK_DIR/changes.xml.tmp
FLAT_FILE=$WORK_DIR/nodes

# Send output to the log
exec >> ${LOG_FILE} 2>&1

cd $WORK_DIR

while true
do
    # Fetch the next set of changes
    if [ ! -e "$CHANGES_FILE" ]; then
        echo "Fetching new changes"
        set +e
        osmosis --read-replication-interval --simc --write-xml-change file="${TEMP_FILE}" && mv $TEMP_FILE $CHANGES_FILE
        set -e
    else
        echo "Found changes file from previous run. Download skipped."
    fi
    if [ ! -e "$CHANGES_FILE" ]; then
        echo "Failed to fetch changes - waiting a few minutes before retry"
        sleep 300
    else
        tables=`psql  -d gis -c '\dt;'`
        if echo "$tables" | grep -q "planet_osm_point"; then
            action="--append"
            echo "Appending to existing dabase gis"
        else
            action="--create"
            echo "Creating tables in database gis"
            if [ -e "$FLAT_FILE" ]; then rm $FLAT_FILE; fi
        fi
        osm2pgsql --slim $action  \
                  --style /var/lib/osm_replicate/osm2pgsql.style\
                  --cache 100  --disable-parallel-indexing --unlogged \
                  --cache-strategy sparse \
                  $CHANGES_FILE 2>&1 |  (while read -r -n 100 l; do echo $l; done)
        if [ ${PIPESTATUS[0]} != 0 ]; then
            echo "Error while importing changes, exiting"
            exit 1
        fi
    rm $CHANGES_FILE
    echo 'All ok, sleeping'
    sleep 30
    fi
done
            
            # Expire tiles which are touched by the changes
#            sudo -u www-data /usr/local/bin/expire-tiles ${file} > /dev/null 2>&1 &
